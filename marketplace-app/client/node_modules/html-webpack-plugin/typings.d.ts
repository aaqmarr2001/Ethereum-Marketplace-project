import { AsyncSeriesWaterfallHook } from "tapable";
import { Compiler, compilation } from 'webpack';
import { Options as HtmlMinifierOptions } from "html-minifier-terser";

export = HtmlWebpackPlugin;

declare class HtmlWebpackPlugin {
  constructor(options?: HtmlWebpackPlugin.Options);

  apply(compiler: Compiler): void;

  static getHooks(compilation: compilation.Compilation): HtmlWebpackPlugin.Hooks;

  /**
   * Static helper to create a tag object to be get injected into the dom
   */
  static createHtmlTagObject(
    tagName: string,
    attributes?: { [attributeName: string]: string | boolean },
    innerHTML?: string
  ): HtmlWebpackPlugin.HtmlTagObject;

  static readonly version: number;
}

declare namespace HtmlWebpackPlugin {
  type MinifyOptions = HtmlMinifierOptions;

  interface Options extends Partial<ProcessedOptions> {}

  /**
   * The plugin options after adding default values
   */
  interface ProcessedOptions {
    /**
     * Emit the file only if it was changed.
     * @default true
     */
    cache: boolean;
    /**
     * List all entries which should be injected
     */
    chunks: "all" | string[];
    /**
     * Allows to control how chunks should be sorted before they are included to the html.
     * @default 'auto'
     */
    chunksSortMode:
      | "auto"
      | "manual"
      | (((entryNameA: string, entryNameB: string) => number));
    /**
     * List all entries which should not be injected
     */
    excludeChunks: string[];
    /**
     * Path to the favicon icon
     */
    favicon: false | string;
    /**
     * The file to write the HTML to.
     * Supports subdirectories eg: `ass